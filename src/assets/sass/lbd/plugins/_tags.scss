
//tag ripple
[_nghost-c6] {
    display: none;
}

@mixin tag-input-theme($theme) {
    display: block;
    flex-direction: row;
    flex-wrap: wrap;
    position: relative;

    transition: map-get($theme, transition);

    padding: map-get($theme, 'container-padding');
    min-height: map-get($theme, 'container-height');

    cursor: text;

    border-bottom: map-get($theme, 'container-border-bottom');
    box-shadow: map-get($theme, 'box-shadow');
    border-radius: map-get($theme, 'border-radius');

    &:focus {
        outline: 0;
    }

    &.ng2-tag-input--dropping {
        opacity: 0.7;
    }

    &.ng2-tag-input--focused {
        border-bottom: map-get($theme, 'container-border-bottom-focused');
    }

    &.ng2-tag-input--invalid {
        border-bottom: map-get($theme, 'container-border-bottom-invalid');
    }

    &.ng2-tag-input--loading {
        border: none;
    }

    &.ng2-tag-input--disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    form {
        margin: map-get($theme, 'container-margin');
    }

    .ng2-tags-container {
        flex-wrap: wrap;
        display: flex;
    }
}

@mixin error-message($theme) {
    font-size: map-get($theme, 'error-message-font-size');
    color: map-get($theme, 'error-message-color');
    margin: map-get($theme, 'error-message-margin');
}

@mixin tag-theme($theme) {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    font-family: map-get($theme, 'font-family');
    font-weight: map-get($theme, 'font-weight');
    font-size: map-get($theme, 'font-size');
    letter-spacing: map-get($theme, 'letter-spacing');

    color: map-get($theme, 'color');
    border-radius: map-get($theme, 'border-radius');
    border: map-get($theme, 'border');

    transition: map-get($theme, 'transition');

    margin: map-get($theme, 'margin');
    padding: map-get($theme, 'padding');

    height: map-get($theme, 'height');
    line-height: map-get($theme, 'line-height');

    background: map-get($theme, 'background');
    text-transform: map-get($theme, 'text-transform');

    user-select: none;
    overflow: hidden;
    outline: 0;
    cursor: pointer;
    position: relative;

    &:not(.readonly):not(.tag--editing):focus {
        background: map-get($theme, 'background-focused');
        color: map-get($theme, 'color-focused');
    }

    &:not(.readonly):not(.tag--editing):active {
        background: map-get($theme, 'background-active');
        color: map-get($theme, 'color-active');
    }

    &:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {
        background: map-get($theme, 'background-hover');
        color: map-get($theme, 'color-hover');
    }

    &.readonly {
        cursor: default;
    }

    &.readonly:focus,
    &:focus {
        outline: 0;
    }

    &.tag--editing {
        background-color: map-get($theme, 'background-editing');
        cursor: text;
    }

    &[_nghost-c5]:focus path[_ngcontent-c5],
    &:focus [_nghost-c5] path[_ngcontent-c5],
    &[_nghost-c5]:active path[_ngcontent-c5],
    &:active [_nghost-c5] path[_ngcontent-c5]{
        fill: $info-color;
    }

    &[_nghost-c5]:hover svg,
    &:hover [_nghost-c5] svg{
        opacity: 1;
        right: 10px;
    }
}

@mixin tag-input-form-theme($theme) {
    display: inline;
    vertical-align: middle;

    border: map-get($theme, 'input-border');
    padding: map-get($theme, 'input-padding');
    height: map-get($theme, 'input-height');

    font-size: map-get($theme, 'input-font-size');
    font-family: map-get($theme, 'font-family');

    &:focus {
        outline: 0;
    }
}

@mixin icon-theme($theme) {
    width: map-get($theme, 'width');
    height: map-get($theme, 'height');
    // transition: map-get($theme, 'transition');
    display: map-get($theme, 'display');
    text-align: right;
    transform: map-get($theme, 'transform');

    path {
        fill: map-get($theme, 'fill');
    }

    svg {
        vertical-align: middle;
        height: 13px;
        opacity: 0;
        position: absolute;
        right: 0;
        top: 5px;
    }

    &:not(.readonly):not(.tag--editing):focus {
        color: map-get($theme, 'color-focused');
    }

    &:not(.readonly):not(.tag--editing):active {
        color: map-get($theme, 'color-active');
    }

    &:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {
        color: map-get($theme, 'color-hover');
    }

}

@mixin icon-theme-focused($theme) {
    path {
        fill: map-get($theme, 'fill-focus');
    }
}

$regular-primary: $default-color;
$regular-primary-dark: darken($regular-primary, 10%);

// this is the container's theme
$regular-theme: (
    container-border-bottom: 1px solid $regular-primary
);

// this is the tag's theme
$regular-tag-theme: (
    background: $transparent-bg,
    background-focused: $transparent-bg,
    background-active: $transparent-bg,
    background-hover: $transparent-bg,
    color: $info-color,
    color-hover: $info-color,
    color-active: $info-color,
    color-focused: $info-color,
    border-radius: 3px,
    border: 1px solid $info-color,
    padding: 2px 12px,
    font-size: 12px,
    font-weight: 500,
    margin: 5px 3px 5px 0,
    line-height: 1.5,
    height: auto,
    text-transform: uppercase,
    vertical-align: middle
);

// this is the delete icon's theme
$regular-icon-theme: (
    fill: $info-color,
    fill-focus: #eee,
    transform: none,
    color-hover: $info-color,
    color-active: $info-color,
    color-focused: $info-color
);

// apply theme to the container
.ng2-tag-input.regular-theme {
    @include tag-input-theme($regular-theme);
}

// apply theme to the tags
.ng2-tag-input.regular-theme tag {
    @include tag-theme($regular-tag-theme);
}

// apply theme to the delete icon
.ng2-tag-input.regular-theme tag delete-icon {
    @include icon-theme($regular-icon-theme);
}

tag[_nghost-c5]:focus   path[_ngcontent-c5],
tag:focus   [_nghost-c5]   path[_ngcontent-c5],
tag[_nghost-c5]:active   path[_ngcontent-c5],
tag:active   [_nghost-c5]   path[_ngcontent-c5] {
    fill: $info-color;
}

$filled-primary: $default-color;
$filled-primary-dark: darken($filled-primary, 10%);

// this is the container's theme
$filled-theme: (
    container-border-bottom: 1px solid $filled-primary
);

// this is the tag's theme
$filled-tag-theme: (
    background: #23CCEF,
    background-focused: #23CCEF,
    background-active: #23CCEF,
    background-hover: #23CCEF,
    color: #ffffff,
    color-hover: #ffffff,
    color-active: #ffffff,
    color-focused: #ffffff,
    border-radius: 3px,
    border: 1px solid $info-color,
    padding: 2px 12px,
    font-size: 12px,
    font-weight: 500,
    margin: 5px 3px 5px 0,
    line-height: 1.5,
    height: auto,
    text-transform: uppercase,
    vertical-align: middle
);

// this is the delete icon's theme
$filled-icon-theme: (
    fill: #ffffff,
    fill-focus: #eee,
    transform: none,
    color-hover: #ffffff,
    color-active: #ffffff,
    color-focused: #ffffff
);

// apply theme to the container
.ng2-tag-input.filled-theme {
    @include tag-input-theme($filled-theme);
}

// apply theme to the tags
.ng2-tag-input.filled-theme tag {
    @include tag-theme($filled-tag-theme);
}

// apply theme to the delete icon
.ng2-tag-input.filled-theme tag delete-icon {
    @include icon-theme($filled-icon-theme);
}

tag[_nghost-c5]:focus   path[_ngcontent-c5],
tag:focus   [_nghost-c5]   path[_ngcontent-c5],
tag[_nghost-c5]:active   path[_ngcontent-c5],
tag:active   [_nghost-c5]   path[_ngcontent-c5] {
    fill: $info-color;
}

.tag__text[_ngcontent-c3] {
    margin-top: 2px;
}
